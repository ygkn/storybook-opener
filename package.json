{
  "name": "storybook-opener",
  "displayName": "Storybook Opener",
  "icon": "./assets/icon.png",
  "description": "Open Storybook quickly",
  "version": "4.0.0",
  "publisher": "ygkn",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other"
  ],
  "homepage": "https://github.com/ygkn/storybook-opener#readme",
  "bugs": {
    "url": "https://github.com/ygkn/storybook-opener/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ygkn/storybook-opener.git"
  },
  "activationEvents": [
    "workspaceContains:*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "storybook-opener.open",
        "title": "Open Storybook",
        "category": "Storybook Opener",
        "when": "storybook-opener.isActiveEditorCsf",
        "icon": {
          "light": "./assets/icon-black.svg",
          "dark": "./assets/icon-white.svg"
        }
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "storybook-opener.isActiveEditorCsf",
          "command": "storybook-opener.open",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "when": "storybook-opener.isActiveEditorCsf",
          "command": "storybook-opener.open",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Storybook Opener",
      "properties": {
        "storybook-opener.startCommand": {
          "type": "string",
          "description": "Command to run when starting a Storybook. By default, Storybook Opener will run `npx storybook dev --no-open ${options}` with options built from `storybook-opener.storybookOption` options.",
          "scope": "resource"
        },
        "storybook-opener.autoStartBehavior": {
          "type": "string",
          "default": "ask",
          "description": "The behavior when Storybook server is not running.",
          "enum": [
            "ask",
            "always",
            "never"
          ],
          "enumDescriptions": [
            "Ask before starting Storybook server.",
            "Always automatically start Storybook server without asking.",
            "Never automatically start Storybook server without asking."
          ]
        },
        "storybook-opener.storybookOption.configDir": {
          "type": "string",
          "default": ".storybook",
          "markdownDescription": "Directory where to load Storybook configurations from\n\nSame to `-c` / `--config-dir` option of [Storybook CLI Options](https://storybook.js.org/docs/react/api/cli-options)",
          "scope": "resource"
        },
        "storybook-opener.storybookOption.port": {
          "type": "number",
          "markdownDescription": "Port to run Storybook\n\nSame to `-p` / `--port` option of [Storybook CLI Options](https://storybook.js.org/docs/react/api/cli-options)",
          "default": 6006,
          "scope": "resource"
        },
        "storybook-opener.storybookOption.host": {
          "type": "string",
          "markdownDescription": "Host to run Storybook\n\nSame to `-h` / `--host` option of [Storybook CLI Options](https://storybook.js.org/docs/react/api/cli-options)",
          "default": "localhost",
          "scope": "resource"
        },
        "storybook-opener.storybookOption.https": {
          "type": "boolean",
          "markdownDescription": "Serve Storybook over HTTPS\n\nSame to `--https` option of [Storybook CLI Options](https://storybook.js.org/docs/react/api/cli-options)",
          "default": false,
          "scope": "resource"
        },
        "storybook-opener.openInEditor.enable": {
          "type": "boolean",
          "description": "When enabled, Open storybook with vscode SimpleBrowser.",
          "default": false,
          "scope": "resource"
        },
        "storybook-opener.openInEditor.follow": {
          "type": "boolean",
          "markdownDescription": "When enabled, Automatically opens stories related to the opened file.\n\n`storybook-opener.openInEditor.enable` **MUST** be set to `true`.",
          "default": false,
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run esbuild-base -- --sourcemap",
    "build:watch": "npm run esbuild-base -- --sourcemap --watch",
    "lint:biome": "biome check src",
    "lint:ts": "tsc --noEmit",
    "lint": "concurrently npm:lint:*"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.4",
    "@tsconfig/strictest": "2.0.5",
    "@types/mocha": "10.0.10",
    "@types/node": "22.15.18",
    "@types/vscode": "1.60.0",
    "@vscode/test-electron": "2.5.2",
    "concurrently": "9.1.2",
    "esbuild": "0.25.4",
    "mocha": "11.2.2",
    "storybook": "8.6.14",
    "typescript": "5.8.3"
  },
  "dependencies": {
    "slash": "^5.1.0"
  }
}
